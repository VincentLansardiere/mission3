//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("gsbrapports2016Model", "medicament_fk", "famille", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(gsbRapports.famille), "medicament", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(gsbRapports.medicament), true)]
[assembly: EdmRelationshipAttribute("gsbrapports2016Model", "rapport_fk2", "medecin", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(gsbRapports.medecin), "rapport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(gsbRapports.rapport), true)]
[assembly: EdmRelationshipAttribute("gsbrapports2016Model", "offrir_fk2", "medicament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(gsbRapports.medicament), "offrir", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(gsbRapports.offrir), true)]
[assembly: EdmRelationshipAttribute("gsbrapports2016Model", "offrir_fk1", "rapport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(gsbRapports.rapport), "offrir", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(gsbRapports.offrir), true)]
[assembly: EdmRelationshipAttribute("gsbrapports2016Model", "rapport_fk1", "visiteur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(gsbRapports.visiteur), "rapport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(gsbRapports.rapport), true)]

#endregion

namespace gsbRapports
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class gsbrapports2016Entities : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet gsbrapports2016Entities à l'aide de la chaîne de connexion trouvée dans la section 'gsbrapports2016Entities' du fichier de configuration d'application.
        /// </summary>
        public gsbrapports2016Entities() : base("name=gsbrapports2016Entities", "gsbrapports2016Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet gsbrapports2016Entities.
        /// </summary>
        public gsbrapports2016Entities(string connectionString) : base(connectionString, "gsbrapports2016Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet gsbrapports2016Entities.
        /// </summary>
        public gsbrapports2016Entities(EntityConnection connection) : base(connection, "gsbrapports2016Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<famille> famille
        {
            get
            {
                if ((_famille == null))
                {
                    _famille = base.CreateObjectSet<famille>("famille");
                }
                return _famille;
            }
        }
        private ObjectSet<famille> _famille;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<medecin> medecin
        {
            get
            {
                if ((_medecin == null))
                {
                    _medecin = base.CreateObjectSet<medecin>("medecin");
                }
                return _medecin;
            }
        }
        private ObjectSet<medecin> _medecin;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<medicament> medicament
        {
            get
            {
                if ((_medicament == null))
                {
                    _medicament = base.CreateObjectSet<medicament>("medicament");
                }
                return _medicament;
            }
        }
        private ObjectSet<medicament> _medicament;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<offrir> offrir
        {
            get
            {
                if ((_offrir == null))
                {
                    _offrir = base.CreateObjectSet<offrir>("offrir");
                }
                return _offrir;
            }
        }
        private ObjectSet<offrir> _offrir;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<rapport> rapport
        {
            get
            {
                if ((_rapport == null))
                {
                    _rapport = base.CreateObjectSet<rapport>("rapport");
                }
                return _rapport;
            }
        }
        private ObjectSet<rapport> _rapport;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<visiteur> visiteur
        {
            get
            {
                if ((_visiteur == null))
                {
                    _visiteur = base.CreateObjectSet<visiteur>("visiteur");
                }
                return _visiteur;
            }
        }
        private ObjectSet<visiteur> _visiteur;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet famille. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTofamille(famille famille)
        {
            base.AddObject("famille", famille);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet medecin. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTomedecin(medecin medecin)
        {
            base.AddObject("medecin", medecin);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet medicament. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTomedicament(medicament medicament)
        {
            base.AddObject("medicament", medicament);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet offrir. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTooffrir(offrir offrir)
        {
            base.AddObject("offrir", offrir);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet rapport. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTorapport(rapport rapport)
        {
            base.AddObject("rapport", rapport);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet visiteur. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddTovisiteur(visiteur visiteur)
        {
            base.AddObject("visiteur", visiteur);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gsbrapports2016Model", Name="famille")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class famille : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet famille.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété id.</param>
        /// <param name="libelle">Valeur initiale de la propriété libelle.</param>
        public static famille Createfamille(global::System.String id, global::System.String libelle)
        {
            famille famille = new famille();
            famille.id = id;
            famille.libelle = libelle;
            return famille;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String libelle
        {
            get
            {
                return _libelle;
            }
            set
            {
                OnlibelleChanging(value);
                ReportPropertyChanging("libelle");
                _libelle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("libelle");
                OnlibelleChanged();
            }
        }
        private global::System.String _libelle;
        partial void OnlibelleChanging(global::System.String value);
        partial void OnlibelleChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "medicament_fk", "medicament")]
        public EntityCollection<medicament> medicament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<medicament>("gsbrapports2016Model.medicament_fk", "medicament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<medicament>("gsbrapports2016Model.medicament_fk", "medicament", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gsbrapports2016Model", Name="medecin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class medecin : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet medecin.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété id.</param>
        /// <param name="nom">Valeur initiale de la propriété nom.</param>
        /// <param name="prenom">Valeur initiale de la propriété prenom.</param>
        /// <param name="adresse">Valeur initiale de la propriété adresse.</param>
        /// <param name="departement">Valeur initiale de la propriété departement.</param>
        public static medecin Createmedecin(global::System.Int32 id, global::System.String nom, global::System.String prenom, global::System.String adresse, global::System.Int32 departement)
        {
            medecin medecin = new medecin();
            medecin.id = id;
            medecin.nom = nom;
            medecin.prenom = prenom;
            medecin.adresse = adresse;
            medecin.departement = departement;
            return medecin;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nom
        {
            get
            {
                return _nom;
            }
            set
            {
                OnnomChanging(value);
                ReportPropertyChanging("nom");
                _nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nom");
                OnnomChanged();
            }
        }
        private global::System.String _nom;
        partial void OnnomChanging(global::System.String value);
        partial void OnnomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String prenom
        {
            get
            {
                return _prenom;
            }
            set
            {
                OnprenomChanging(value);
                ReportPropertyChanging("prenom");
                _prenom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("prenom");
                OnprenomChanged();
            }
        }
        private global::System.String _prenom;
        partial void OnprenomChanging(global::System.String value);
        partial void OnprenomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String adresse
        {
            get
            {
                return _adresse;
            }
            set
            {
                OnadresseChanging(value);
                ReportPropertyChanging("adresse");
                _adresse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("adresse");
                OnadresseChanged();
            }
        }
        private global::System.String _adresse;
        partial void OnadresseChanging(global::System.String value);
        partial void OnadresseChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String tel
        {
            get
            {
                return _tel;
            }
            set
            {
                OntelChanging(value);
                ReportPropertyChanging("tel");
                _tel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tel");
                OntelChanged();
            }
        }
        private global::System.String _tel;
        partial void OntelChanging(global::System.String value);
        partial void OntelChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String specialiteComplementaire
        {
            get
            {
                return _specialiteComplementaire;
            }
            set
            {
                OnspecialiteComplementaireChanging(value);
                ReportPropertyChanging("specialiteComplementaire");
                _specialiteComplementaire = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("specialiteComplementaire");
                OnspecialiteComplementaireChanged();
            }
        }
        private global::System.String _specialiteComplementaire;
        partial void OnspecialiteComplementaireChanging(global::System.String value);
        partial void OnspecialiteComplementaireChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 departement
        {
            get
            {
                return _departement;
            }
            set
            {
                OndepartementChanging(value);
                ReportPropertyChanging("departement");
                _departement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("departement");
                OndepartementChanged();
            }
        }
        private global::System.Int32 _departement;
        partial void OndepartementChanging(global::System.Int32 value);
        partial void OndepartementChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "rapport_fk2", "rapport")]
        public EntityCollection<rapport> rapport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rapport>("gsbrapports2016Model.rapport_fk2", "rapport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rapport>("gsbrapports2016Model.rapport_fk2", "rapport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gsbrapports2016Model", Name="medicament")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class medicament : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet medicament.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété id.</param>
        /// <param name="nomCommercial">Valeur initiale de la propriété nomCommercial.</param>
        /// <param name="idFamille">Valeur initiale de la propriété idFamille.</param>
        /// <param name="composition">Valeur initiale de la propriété composition.</param>
        /// <param name="effets">Valeur initiale de la propriété effets.</param>
        /// <param name="contreIndications">Valeur initiale de la propriété contreIndications.</param>
        public static medicament Createmedicament(global::System.String id, global::System.String nomCommercial, global::System.String idFamille, global::System.String composition, global::System.String effets, global::System.String contreIndications)
        {
            medicament medicament = new medicament();
            medicament.id = id;
            medicament.nomCommercial = nomCommercial;
            medicament.idFamille = idFamille;
            medicament.composition = composition;
            medicament.effets = effets;
            medicament.contreIndications = contreIndications;
            return medicament;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nomCommercial
        {
            get
            {
                return _nomCommercial;
            }
            set
            {
                OnnomCommercialChanging(value);
                ReportPropertyChanging("nomCommercial");
                _nomCommercial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nomCommercial");
                OnnomCommercialChanged();
            }
        }
        private global::System.String _nomCommercial;
        partial void OnnomCommercialChanging(global::System.String value);
        partial void OnnomCommercialChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String idFamille
        {
            get
            {
                return _idFamille;
            }
            set
            {
                OnidFamilleChanging(value);
                ReportPropertyChanging("idFamille");
                _idFamille = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("idFamille");
                OnidFamilleChanged();
            }
        }
        private global::System.String _idFamille;
        partial void OnidFamilleChanging(global::System.String value);
        partial void OnidFamilleChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String composition
        {
            get
            {
                return _composition;
            }
            set
            {
                OncompositionChanging(value);
                ReportPropertyChanging("composition");
                _composition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("composition");
                OncompositionChanged();
            }
        }
        private global::System.String _composition;
        partial void OncompositionChanging(global::System.String value);
        partial void OncompositionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String effets
        {
            get
            {
                return _effets;
            }
            set
            {
                OneffetsChanging(value);
                ReportPropertyChanging("effets");
                _effets = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("effets");
                OneffetsChanged();
            }
        }
        private global::System.String _effets;
        partial void OneffetsChanging(global::System.String value);
        partial void OneffetsChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String contreIndications
        {
            get
            {
                return _contreIndications;
            }
            set
            {
                OncontreIndicationsChanging(value);
                ReportPropertyChanging("contreIndications");
                _contreIndications = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("contreIndications");
                OncontreIndicationsChanged();
            }
        }
        private global::System.String _contreIndications;
        partial void OncontreIndicationsChanging(global::System.String value);
        partial void OncontreIndicationsChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "medicament_fk", "famille")]
        public famille famille
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<famille>("gsbrapports2016Model.medicament_fk", "famille").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<famille>("gsbrapports2016Model.medicament_fk", "famille").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<famille> familleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<famille>("gsbrapports2016Model.medicament_fk", "famille");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<famille>("gsbrapports2016Model.medicament_fk", "famille", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "offrir_fk2", "offrir")]
        public EntityCollection<offrir> offrir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<offrir>("gsbrapports2016Model.offrir_fk2", "offrir");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<offrir>("gsbrapports2016Model.offrir_fk2", "offrir", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gsbrapports2016Model", Name="offrir")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class offrir : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet offrir.
        /// </summary>
        /// <param name="idRapport">Valeur initiale de la propriété idRapport.</param>
        /// <param name="idMedicament">Valeur initiale de la propriété idMedicament.</param>
        public static offrir Createoffrir(global::System.Int32 idRapport, global::System.String idMedicament)
        {
            offrir offrir = new offrir();
            offrir.idRapport = idRapport;
            offrir.idMedicament = idMedicament;
            return offrir;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idRapport
        {
            get
            {
                return _idRapport;
            }
            set
            {
                if (_idRapport != value)
                {
                    OnidRapportChanging(value);
                    ReportPropertyChanging("idRapport");
                    _idRapport = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idRapport");
                    OnidRapportChanged();
                }
            }
        }
        private global::System.Int32 _idRapport;
        partial void OnidRapportChanging(global::System.Int32 value);
        partial void OnidRapportChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String idMedicament
        {
            get
            {
                return _idMedicament;
            }
            set
            {
                if (_idMedicament != value)
                {
                    OnidMedicamentChanging(value);
                    ReportPropertyChanging("idMedicament");
                    _idMedicament = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("idMedicament");
                    OnidMedicamentChanged();
                }
            }
        }
        private global::System.String _idMedicament;
        partial void OnidMedicamentChanging(global::System.String value);
        partial void OnidMedicamentChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quantite
        {
            get
            {
                return _quantite;
            }
            set
            {
                OnquantiteChanging(value);
                ReportPropertyChanging("quantite");
                _quantite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantite");
                OnquantiteChanged();
            }
        }
        private Nullable<global::System.Int32> _quantite;
        partial void OnquantiteChanging(Nullable<global::System.Int32> value);
        partial void OnquantiteChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "offrir_fk2", "medicament")]
        public medicament medicament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medicament>("gsbrapports2016Model.offrir_fk2", "medicament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medicament>("gsbrapports2016Model.offrir_fk2", "medicament").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<medicament> medicamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medicament>("gsbrapports2016Model.offrir_fk2", "medicament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<medicament>("gsbrapports2016Model.offrir_fk2", "medicament", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "offrir_fk1", "rapport")]
        public rapport rapport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rapport>("gsbrapports2016Model.offrir_fk1", "rapport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rapport>("gsbrapports2016Model.offrir_fk1", "rapport").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rapport> rapportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rapport>("gsbrapports2016Model.offrir_fk1", "rapport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<rapport>("gsbrapports2016Model.offrir_fk1", "rapport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gsbrapports2016Model", Name="rapport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rapport : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet rapport.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété id.</param>
        /// <param name="idVisiteur">Valeur initiale de la propriété idVisiteur.</param>
        /// <param name="idMedecin">Valeur initiale de la propriété idMedecin.</param>
        public static rapport Createrapport(global::System.Int32 id, global::System.String idVisiteur, global::System.Int32 idMedecin)
        {
            rapport rapport = new rapport();
            rapport.id = id;
            rapport.idVisiteur = idVisiteur;
            rapport.idMedecin = idMedecin;
            return rapport;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String motif
        {
            get
            {
                return _motif;
            }
            set
            {
                OnmotifChanging(value);
                ReportPropertyChanging("motif");
                _motif = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("motif");
                OnmotifChanged();
            }
        }
        private global::System.String _motif;
        partial void OnmotifChanging(global::System.String value);
        partial void OnmotifChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bilan
        {
            get
            {
                return _bilan;
            }
            set
            {
                OnbilanChanging(value);
                ReportPropertyChanging("bilan");
                _bilan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bilan");
                OnbilanChanged();
            }
        }
        private global::System.String _bilan;
        partial void OnbilanChanging(global::System.String value);
        partial void OnbilanChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String idVisiteur
        {
            get
            {
                return _idVisiteur;
            }
            set
            {
                OnidVisiteurChanging(value);
                ReportPropertyChanging("idVisiteur");
                _idVisiteur = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("idVisiteur");
                OnidVisiteurChanged();
            }
        }
        private global::System.String _idVisiteur;
        partial void OnidVisiteurChanging(global::System.String value);
        partial void OnidVisiteurChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMedecin
        {
            get
            {
                return _idMedecin;
            }
            set
            {
                OnidMedecinChanging(value);
                ReportPropertyChanging("idMedecin");
                _idMedecin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idMedecin");
                OnidMedecinChanged();
            }
        }
        private global::System.Int32 _idMedecin;
        partial void OnidMedecinChanging(global::System.Int32 value);
        partial void OnidMedecinChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "rapport_fk2", "medecin")]
        public medecin medecin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medecin>("gsbrapports2016Model.rapport_fk2", "medecin").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medecin>("gsbrapports2016Model.rapport_fk2", "medecin").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<medecin> medecinReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<medecin>("gsbrapports2016Model.rapport_fk2", "medecin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<medecin>("gsbrapports2016Model.rapport_fk2", "medecin", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "offrir_fk1", "offrir")]
        public EntityCollection<offrir> offrir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<offrir>("gsbrapports2016Model.offrir_fk1", "offrir");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<offrir>("gsbrapports2016Model.offrir_fk1", "offrir", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "rapport_fk1", "visiteur")]
        public visiteur visiteur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<visiteur>("gsbrapports2016Model.rapport_fk1", "visiteur").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<visiteur>("gsbrapports2016Model.rapport_fk1", "visiteur").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<visiteur> visiteurReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<visiteur>("gsbrapports2016Model.rapport_fk1", "visiteur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<visiteur>("gsbrapports2016Model.rapport_fk1", "visiteur", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gsbrapports2016Model", Name="visiteur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class visiteur : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet visiteur.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété id.</param>
        public static visiteur Createvisiteur(global::System.String id)
        {
            visiteur visiteur = new visiteur();
            visiteur.id = id;
            return visiteur;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nom
        {
            get
            {
                return _nom;
            }
            set
            {
                OnnomChanging(value);
                ReportPropertyChanging("nom");
                _nom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("nom");
                OnnomChanged();
            }
        }
        private global::System.String _nom;
        partial void OnnomChanging(global::System.String value);
        partial void OnnomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prenom
        {
            get
            {
                return _prenom;
            }
            set
            {
                OnprenomChanging(value);
                ReportPropertyChanging("prenom");
                _prenom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("prenom");
                OnprenomChanged();
            }
        }
        private global::System.String _prenom;
        partial void OnprenomChanging(global::System.String value);
        partial void OnprenomChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String login
        {
            get
            {
                return _login;
            }
            set
            {
                OnloginChanging(value);
                ReportPropertyChanging("login");
                _login = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("login");
                OnloginChanged();
            }
        }
        private global::System.String _login;
        partial void OnloginChanging(global::System.String value);
        partial void OnloginChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mdp
        {
            get
            {
                return _mdp;
            }
            set
            {
                OnmdpChanging(value);
                ReportPropertyChanging("mdp");
                _mdp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mdp");
                OnmdpChanged();
            }
        }
        private global::System.String _mdp;
        partial void OnmdpChanging(global::System.String value);
        partial void OnmdpChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String adresse
        {
            get
            {
                return _adresse;
            }
            set
            {
                OnadresseChanging(value);
                ReportPropertyChanging("adresse");
                _adresse = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("adresse");
                OnadresseChanged();
            }
        }
        private global::System.String _adresse;
        partial void OnadresseChanging(global::System.String value);
        partial void OnadresseChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cp
        {
            get
            {
                return _cp;
            }
            set
            {
                OncpChanging(value);
                ReportPropertyChanging("cp");
                _cp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cp");
                OncpChanged();
            }
        }
        private global::System.String _cp;
        partial void OncpChanging(global::System.String value);
        partial void OncpChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ville
        {
            get
            {
                return _ville;
            }
            set
            {
                OnvilleChanging(value);
                ReportPropertyChanging("ville");
                _ville = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ville");
                OnvilleChanged();
            }
        }
        private global::System.String _ville;
        partial void OnvilleChanging(global::System.String value);
        partial void OnvilleChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateEmbauche
        {
            get
            {
                return _dateEmbauche;
            }
            set
            {
                OndateEmbaucheChanging(value);
                ReportPropertyChanging("dateEmbauche");
                _dateEmbauche = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateEmbauche");
                OndateEmbaucheChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateEmbauche;
        partial void OndateEmbaucheChanging(Nullable<global::System.DateTime> value);
        partial void OndateEmbaucheChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gsbrapports2016Model", "rapport_fk1", "rapport")]
        public EntityCollection<rapport> rapport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rapport>("gsbrapports2016Model.rapport_fk1", "rapport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rapport>("gsbrapports2016Model.rapport_fk1", "rapport", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
